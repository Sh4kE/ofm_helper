# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-11-15 16:03
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ['user', 'player'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('AF', 'Afghanistan'), ('EG', 'Ägypten'), ('AL', 'Albanien'), ('DZ', 'Algerien'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AG', 'Antigua und Barbuda'), ('GQ', 'Äquatorialguinea'), ('AR', 'Argentinien'), ('AM', 'Armenien'), ('AZ', 'Aserbaidschan'), ('ET', 'Äthiopien'), ('AU', 'Australien'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesch'), ('BB', 'Barbados'), ('BE', 'Belgien'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BT', 'Bhutan'), ('BO', 'Bolivien'), ('BA', 'Bosnien und Herzegowina'), ('BW', 'Botswana'), ('BR', 'Brasilien'), ('BN', 'Brunei'), ('BG', 'Bulgarien'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('CL', 'Chile'), ('TW', 'Republik China (Taiwan)'), ('CN', 'Volksrepublik China'), ('CR', 'Costa Rica'), ('DK', 'Dänemark'), ('DE', 'Deutschland'), ('DM', 'Dominica'), ('DO', 'Dominikanische Republik'), ('DJ', 'Dschibuti'), ('EC', 'Ecuador'), ('CI', 'Elfenbeinküste'), ('SV', 'El Salvador'), ('ER', 'Eritrea'), ('EE', 'Estland'), ('FJ', 'Fidschi'), ('FI', 'Finnland'), ('FR', 'Frankreich'), ('GA', 'Gabun'), ('GM', 'Gambia'), ('GE', 'Georgien'), ('GH', 'Ghana'), ('GD', 'Grenada'), ('GR', 'Griechenland'), ('GT', 'Guatemala'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HN', 'Honduras'), ('IN', 'Indien'), ('ID', 'Indonesien'), ('IQ', 'Irak'), ('IR', 'Iran'), ('IE', 'Irland'), ('IS', 'Island'), ('IL', 'Israel'), ('IT', 'Italien'), ('JM', 'Jamaika'), ('JP', 'Japan'), ('YE', 'Jemen'), ('JO', 'Jordanien'), ('YUCS', 'Jugoslawien'), ('KH', 'Kambodscha'), ('CM', 'Kamerun'), ('CA', 'Kanada'), ('CV', 'Kap Verde'), ('KZ', 'Kasachstan'), ('QA', 'Katar'), ('KE', 'Kenia'), ('KG', 'Kirgisistan'), ('KI', 'Kiribati'), ('CO', 'Kolumbien'), ('KM', 'Komoren'), ('CG', 'Republik Kongo'), ('CD', 'Demokr. Republik Kongo'), ('KP', 'Nordkorea'), ('KR', 'Südkorea'), ('HR', 'Kroatien'), ('CU', 'Kuba'), ('KW', 'Kuwait'), ('LA', 'Laos'), ('LS', 'Lesotho'), ('LV', 'Lettland'), ('LB', 'Libanon'), ('LR', 'Liberia'), ('LY', 'Libyen'), ('LI', 'Liechtenstein'), ('LT', 'Litauen'), ('LU', 'Luxemburg'), ('MG', 'Madagaskar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Malediven'), ('ML', 'Mali'), ('MT', 'Malta'), ('MA', 'Marokko'), ('MH', 'Marshallinseln'), ('MR', 'Mauretanien'), ('MU', 'Mauritius'), ('MK', 'Mazedonien'), ('MX', 'Mexiko'), ('FM', 'Mikronesien'), ('MD', 'Moldawien'), ('MC', 'Monaco'), ('MN', 'Mongolei'), ('ME', 'Montenegro'), ('MZ', 'Mosambik'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NZ', 'Neuseeland'), ('NI', 'Nicaragua'), ('NL', 'Niederlande'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NO', 'Norwegen'), ('OM', 'Oman'), ('AT', 'Österreich'), ('TL', 'Osttimor'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PA', 'Panama'), ('PG', 'Papua-Neuguinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippinen'), ('PL', 'Polen'), ('PT', 'Portugal'), ('RW', 'Ruanda'), ('RO', 'Rumänien'), ('RU', 'Russland'), ('SB', 'Salomonen'), ('ZM', 'Sambia'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'São Tomé und Príncipeão'), ('SA', 'Saudi-Arabien'), ('SE', 'Schweden'), ('CH', 'Schweiz'), ('SN', 'Senegal'), ('RS', 'Serbien'), ('SC', 'Seychellen'), ('SL', 'Sierra Leone'), ('ZW', 'Simbabwe'), ('SG', 'Singapur'), ('SK', 'Slowakei'), ('SI', 'Slowenien'), ('SO', 'Somalia'), ('ES', 'Spanien'), ('LK', 'Sri Lanka'), ('KN', 'St Kitts und Nevis'), ('LC', 'St Lucia'), ('VC', 'St Vincent und die Grenadinen'), ('ZA', 'Südafrika'), ('SD', 'Sudan'), ('SS', 'Südsudan'), ('SR', 'Suriname'), ('SZ', 'Swasiland'), ('SY', 'Syrien'), ('TJ', 'Tadschikistan'), ('TZ', 'Tansania'), ('TH', 'Thailand'), ('TG', 'Togo'), ('TO', 'Tonga'), ('TT', 'Trinidad und Tobago'), ('TD', 'Tschad'), ('CZ', 'Tschechien'), ('TN', 'Tunesien'), ('TR', 'Türkei'), ('TM', 'Turkmenistan'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('HU', 'Ungarn'), ('UY', 'Uruguay'), ('UZ', 'Usbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('AE', 'Vereinigte Arabische Emirate'), ('US', 'Vereinigte Staaten von Amerika'), ('GB', 'Vereinigtes Königreich'), ('VN', 'Vietnam'), ('BY', 'Weißrussland'), ('CF', 'Zentralafrikanische Republik'), ('CY', 'Zypern'), ('GB-ENG', 'England'), ('GB-WLS', 'Wales'), ('GB-SCT', 'Schottland'), ('GB-NIR', 'Nordirland')], max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Finance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.IntegerField(default=0)),
                ('income_visitors_league', models.IntegerField(default=0)),
                ('income_sponsoring', models.IntegerField(default=0)),
                ('income_cup', models.IntegerField(default=0)),
                ('income_interests', models.IntegerField(default=0)),
                ('income_loan', models.IntegerField(default=0)),
                ('income_transfer', models.IntegerField(default=0)),
                ('income_visitors_friendlies', models.IntegerField(default=0)),
                ('income_friendlies', models.IntegerField(default=0)),
                ('income_funcup', models.IntegerField(default=0)),
                ('income_betting', models.IntegerField(default=0)),
                ('expenses_player_salaries', models.IntegerField(default=0)),
                ('expenses_stadium', models.IntegerField(default=0)),
                ('expenses_youth', models.IntegerField(default=0)),
                ('expenses_interests', models.IntegerField(default=0)),
                ('expenses_trainings', models.IntegerField(default=0)),
                ('expenses_transfer', models.IntegerField(default=0)),
                ('expenses_compensation', models.IntegerField(default=0)),
                ('expenses_friendlies', models.IntegerField(default=0)),
                ('expenses_funcup', models.IntegerField(default=0)),
                ('expenses_betting', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['user', '-matchday'],
            },
        ),
        migrations.CreateModel(
            name='KeyValuePair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.IntegerField(db_index=True)),
                ('value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league', models.IntegerField(choices=[(0, '1. Liga'), (1, '2. Liga'), (2, 'Regionalliga'), (3, 'Oberliga'), (4, 'Verbandsliga'), (5, 'Landesliga'), (6, 'Landesklasse'), (7, 'Bezirksliga'), (8, 'Bezirksklasse'), (9, 'Kreisliga'), (10, 'Kreisklasse')])),
                ('relay', models.CharField(max_length=10)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_type', models.CharField(choices=[('L', 'Liga'), ('F', 'Friendly'), ('P', 'Pokal'), ('F', 'Fun-Cup')], default='L', max_length=1)),
                ('is_home_match', models.BooleanField()),
                ('venue', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Matches',
                'ordering': ['user', '-matchday'],
            },
        ),
        migrations.CreateModel(
            name='Matchday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
            ],
            options={
                'ordering': ['season', '-number'],
            },
        ),
        migrations.CreateModel(
            name='MatchStadiumStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Match stadium statistics',
                'ordering': ['match'],
            },
        ),
        migrations.CreateModel(
            name='MatchTeamStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=200)),
                ('score', models.IntegerField(default=0)),
                ('strength', models.IntegerField(default=0)),
                ('ball_possession', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('chances', models.IntegerField(default=0)),
                ('yellow_cards', models.IntegerField(default=0)),
                ('red_cards', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'MatchTeamStatistics',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('position', models.CharField(choices=[('TW', 'Torwart'), ('LIB', 'Libero'), ('LV', 'Linker Verteidiger'), ('LMD', 'Linker Manndecker'), ('RMD', 'Rechter Manndecker'), ('RV', 'Rechter Verteidiger'), ('VS', 'Vorstopper'), ('LM', 'Linkes Mittelfeld'), ('DM', 'Defensives Mittelfeld'), ('ZM', 'Zentrales Mittelfeld'), ('RM', 'Rechtes Mittelfeld'), ('LS', 'Linker Stürmer'), ('MS', 'Mittelstürmer'), ('RS', 'Rechter Stürmer')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ep', models.IntegerField(default=0)),
                ('tp', models.IntegerField(default=0)),
                ('awp', models.IntegerField(default=0)),
                ('strength', models.IntegerField(default=1)),
                ('freshness', models.IntegerField(default=0)),
                ('games_in_season', models.IntegerField(default=0)),
                ('goals_in_season', models.IntegerField(default=0)),
                ('won_tacklings_in_season', models.IntegerField(default=0)),
                ('lost_tacklings_in_season', models.IntegerField(default=0)),
                ('won_friendly_tacklings_in_season', models.IntegerField(default=0)),
                ('lost_friendly_tacklings_in_season', models.IntegerField(default=0)),
                ('yellow_cards_in_season', models.IntegerField(default=0)),
                ('red_cards_in_season', models.IntegerField(default=0)),
                ('equity', models.IntegerField(default=0)),
                ('matchday', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_statistics', to='core.Matchday')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='core.Player')),
            ],
            options={
                'verbose_name_plural': 'Player statistics',
                'ordering': ['player', '-matchday'],
            },
        ),
        migrations.CreateModel(
            name='Quarter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.IntegerField(choices=[(0, '1'), (1, '2'), (2, '3'), (3, '4')])),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
            ],
            options={
                'ordering': ['-number'],
            },
        ),
        migrations.CreateModel(
            name='StadiumLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='StadiumLevelItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_level', models.IntegerField(default=0)),
                ('value', models.IntegerField(default=0)),
                ('daily_costs', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-current_level', '-value', '-daily_costs'],
            },
        ),
        migrations.CreateModel(
            name='StadiumStandStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(choices=[('N', 'Nord'), ('S', 'Süd'), ('W', 'West'), ('O', 'Ost')], max_length=1)),
                ('visitors', models.IntegerField(default=0)),
                ('ticket_price', models.IntegerField(default=0)),
                ('condition', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
            ],
            options={
                'verbose_name_plural': 'Stadium stand statistics',
            },
        ),
        migrations.CreateModel(
            name='StandLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.IntegerField(default=0)),
                ('has_roof', models.BooleanField(default=False)),
                ('has_seats', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AwpBoundaries',
            fields=[
                ('dictionary_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Dictionary')),
            ],
            options={
                'verbose_name_plural': 'AWP Boundaries',
                'ordering': ['-name'],
            },
            bases=('core.dictionary',),
        ),
        migrations.AddField(
            model_name='stadiumstandstatistics',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stand_statistics', to='core.StandLevel'),
        ),
        migrations.AddField(
            model_name='stadiumstandstatistics',
            name='stadium_statistics',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stand_statistics', to='core.MatchStadiumStatistics'),
        ),
        migrations.AddField(
            model_name='stadiumlevel',
            name='light',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stadium_levels_light', to='core.StadiumLevelItem'),
        ),
        migrations.AddField(
            model_name='stadiumlevel',
            name='parking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stadium_levels_parking', to='core.StadiumLevelItem'),
        ),
        migrations.AddField(
            model_name='stadiumlevel',
            name='screen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stadium_levels_screen', to='core.StadiumLevelItem'),
        ),
        migrations.AddField(
            model_name='stadiumlevel',
            name='security',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stadium_levels_security', to='core.StadiumLevelItem'),
        ),
        migrations.AddField(
            model_name='quarter',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Season'),
        ),
        migrations.AddField(
            model_name='player',
            name='birth_season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Season'),
        ),
        migrations.AddField(
            model_name='player',
            name='nationality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Country'),
        ),
        migrations.AddField(
            model_name='matchstadiumstatistics',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stadium_statistics', to='core.StadiumLevel'),
        ),
        migrations.AddField(
            model_name='matchstadiumstatistics',
            name='match',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stadium_statistics', to='core.Match'),
        ),
        migrations.AddField(
            model_name='matchday',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Season'),
        ),
        migrations.AddField(
            model_name='match',
            name='guest_team_statistics',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_guest_team', to='core.MatchTeamStatistics'),
        ),
        migrations.AddField(
            model_name='match',
            name='home_team_statistics',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_home_team', to='core.MatchTeamStatistics'),
        ),
        migrations.AddField(
            model_name='match',
            name='matchday',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='core.Matchday'),
        ),
        migrations.AddField(
            model_name='match',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='keyvaluepair',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Dictionary'),
        ),
        migrations.AddField(
            model_name='finance',
            name='matchday',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Matchday'),
        ),
        migrations.AddField(
            model_name='finance',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contract',
            name='bought_on_matchday',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bought_players', to='core.Matchday'),
        ),
        migrations.AddField(
            model_name='contract',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Player'),
        ),
        migrations.AddField(
            model_name='contract',
            name='sold_on_matchday',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sold_players', to='core.Matchday'),
        ),
        migrations.AddField(
            model_name='contract',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='finance',
            unique_together=set([('user', 'matchday')]),
        ),
    ]
